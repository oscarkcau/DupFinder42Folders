<Window x:Class="DupFinder42Folders.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DupFinder42Folders"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
        mc:Ignorable="d"
        Title="Duplicate File Finder 42 Folders" 
        Width="550" Height="Auto" MinWidth="400" MinHeight="480" SizeToContent="Height" 
        ResizeMode="CanResizeWithGrip"
        >
    <Window.Resources>
        <local:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <local:SearchCriteriaValueConverter x:Key="SearchCriteriaValueConverter" />
    </Window.Resources>
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>
    
    <Grid x:Name="GridMain">

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TabControl x:Name="TabControlMain" Grid.Row="0" IsSynchronizedWithCurrentItem="True" SelectionChanged="TabControlMain_SelectionChanged">
            <TabItem Tag="{x:Static local:MainWindow+EnumInteractionStep.SourceFolders}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Height="auto" Width="auto" Source="images/folder_explore.png" />
                        <TextBlock Text="Source Folders" Margin="2,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                </TabItem.Header>
                <StackPanel Orientation="Vertical">
                    <Label FontWeight="Bold">Step 1. Please select two desired source folders for searching:</Label>
                    <Label Content="Source Folder 1:"/>
                    <DockPanel Margin="4,0,4,0">
                        <Button Name="ButtonSelectFolder1" DockPanel.Dock="Right" Content="Select Folder" Margin="4,0,0,0" Padding="4,1,4,1" Click="ButtonSelectFolder1_Click"/>
                        <Grid>
                            <TextBox Name="TextBoxSourceFolder1" Text="{Binding Path=SourceFolder1, Mode=TwoWay}">
                            </TextBox>
                            <TextBlock Margin="5,2" Text="Enter or select source folder..." Foreground="LightSteelBlue" 
                            Visibility="{c:Binding ElementName=TextBoxSourceFolder1, Path=Text.IsEmpty}" 
                            IsHitTestVisible="False"/>
                        </Grid>
                    </DockPanel>
                    <Label Content="Source Folder 2:"/>
                    <DockPanel Margin="4,0,4,0">
                        <Button Name="ButtonSelectFolder2" DockPanel.Dock="Right" Content="Select Folder" Margin="4,0,0,0" Padding="4,1,4,1" Click="ButtonSelectFolder2_Click"/>
                        <Grid>
                            <TextBox Name="TextBoxSourceFolder2" Text="{Binding Path=SourceFolder2, Mode=TwoWay}">
                            </TextBox>
                            <TextBlock Margin="5,2" Text="Enter or select source folder..." Foreground="LightSteelBlue" 
                            Visibility="{c:Binding ElementName=TextBoxSourceFolder2, Path=Text.IsEmpty}" 
                            IsHitTestVisible="False"/>
                        </Grid>
                    </DockPanel>
                    <Button Margin="4,8,4,4" Width="100" HorizontalAlignment="Left" Click="Button_Click">Test Folders</Button>
                </StackPanel>
            </TabItem>

            <TabItem Tag="{x:Static local:MainWindow+EnumInteractionStep.SearchOptions}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Height="auto" Width="auto" Source="images/cog.png" />
                        <TextBlock Text="Search Options" Margin="2,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                </TabItem.Header>
                <StackPanel Orientation="Vertical">
                    <Label FontWeight="Bold">Step 2. Please specify searching options:</Label>
                    <GroupBox x:Name="GroupBoxSearchCriteria" Padding="2" Margin="0,4,0,0">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold" Text="Search Criteria" />
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical">
                            <CheckBox Margin="2" Content="File name"
                                      IsChecked="{Binding Path=SearchCriteria, Converter={StaticResource SearchCriteriaValueConverter}, ConverterParameter={x:Static local:EnumSearchCriteria.Name}}"/>
                            <CheckBox Margin="2" Content="File size"
                                      IsChecked="{Binding Path=SearchCriteria, Converter={StaticResource SearchCriteriaValueConverter}, ConverterParameter={x:Static local:EnumSearchCriteria.Size}}"/>
                            <CheckBox Margin="2" Content="File content"
                                      IsChecked="{Binding Path=SearchCriteria, Converter={StaticResource SearchCriteriaValueConverter}, ConverterParameter={x:Static local:EnumSearchCriteria.Content}}"/>
                            <CheckBox Margin="2" Content="File last modified date"
                                      IsChecked="{Binding Path=SearchCriteria, Converter={StaticResource SearchCriteriaValueConverter}, ConverterParameter={x:Static local:EnumSearchCriteria.LastModifiedDate}}"/>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox x:Name="GroupBoxSearchOptions" Padding="2" Margin="0,4,0,0">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold" Text="Search Options" />
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical">
                            <CheckBox Margin="2" Content="Ignore 0-bytes files"
                                      IsChecked="{Binding ShouldIgnoreZeroByteFiles}"/>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Row="0" Grid.Column="0" Content="Exclude files smaller than" Margin="2,4,0,0"
                                          IsChecked="{Binding ShouldExcludeFilesSamllerThan}"/>
                                <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Width="60" Margin="4,0,0,0" 
                                                    Minimum="1" Value="{Binding ExcludeFileSizeUpperBound}"/>
                                <ComboBox Grid.Row="0" Grid.Column="2" Width="80" Margin="4,0,0,0" 
                                          SelectedItem="{Binding ExcludeFileSizeUpperBoundUnit}">
                                    <local:EnumFileSizeUnit>Bytes</local:EnumFileSizeUnit>
                                    <local:EnumFileSizeUnit>KBs</local:EnumFileSizeUnit>
                                    <local:EnumFileSizeUnit>MBs</local:EnumFileSizeUnit>
                                    <local:EnumFileSizeUnit>GBs</local:EnumFileSizeUnit>
                                </ComboBox>
                                <CheckBox Grid.Row="1" Grid.Column="0" Content="Exclude files larger than" Margin="2,4,0,0"
                                          IsChecked="{Binding ShouldExcludeFilesLargerThan}"/>
                                <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1" Width="60" Margin="4,4,0,0" 
                                                    Minimum="0" Value="{Binding ExcludeFileSizeLowerBound}"/>
                                <ComboBox Grid.Row="1" Grid.Column="2" Width="80" Margin="4,4,0,0" 
                                          SelectedItem="{Binding ExcludeFileSizeLowerBoundUnit}">
                                    <local:EnumFileSizeUnit>Bytes</local:EnumFileSizeUnit>
                                    <local:EnumFileSizeUnit>KBs</local:EnumFileSizeUnit>
                                    <local:EnumFileSizeUnit>MBs</local:EnumFileSizeUnit>
                                    <local:EnumFileSizeUnit>GBs</local:EnumFileSizeUnit>
                                </ComboBox>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            
            <TabItem Tag="{x:Static local:MainWindow+EnumInteractionStep.SearchResults}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Height="auto" Width="auto" Source="images/report.png" />
                        <TextBlock Text="Search Result" Margin="2,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" FontWeight="Bold">Matched duplicate files:</Label>
                    <Button Grid.Row="0" HorizontalAlignment="Right" Padding="4" Margin="2" Click="MenuButton_Click">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/disk.png"/>
                        </StackPanel>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Save file list of Source Folder 1..." />
                                <MenuItem Header="Save file list of Source Folder 2..." />
                                <MenuItem Header="Save file list of Both Source Folders..." />
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <TreeView x:Name="TreeViewMatchResult" Grid.Row="1"
                       ItemsSource="{Binding DuplicatedFileRecords}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <EventSetter Event="MouseDoubleClick" Handler="OnTreeViewItemMouseDoubleClick" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        
                        <TreeView.Resources>
                            
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="False">
                                </Setter>
                            </Style>
                            
                            <HierarchicalDataTemplate DataType="{x:Type local:DuplicatedFileRecord}" ItemsSource="{Binding AllFileList}">
                                <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                                    <Image x:Name="icon" Height="auto" Width="auto" Source="images/page.png"/>
                                    <TextBlock Text="{Binding Filename}" Margin="4,0,0,0"/>
                                    <TextBlock Text="{Binding Path=MD5, StringFormat=[{0}]}" Foreground="DimGray" Margin="4,0,0,0"/>
                                </StackPanel>

                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.Image}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/picture.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.Audio}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/music.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.Video}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/film.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.PDF}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/page_white_acrobat.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.Word}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/page_white_word.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.Excel}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/page_white_excel.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.PowerPoint}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/page_white_powerpoint.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.Compressed}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/page_white_zip.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.DiskImage}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/page_white_dvd.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=FileType}" Value="{x:Static local:EnumFileType.Code}">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/page_white_code.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </HierarchicalDataTemplate>

                            <DataTemplate DataType="{x:Type local:PathTreeViewItem}">
                                <StackPanel Orientation="Horizontal">
                                    <Image x:Name="icon" Height="auto" Width="auto"/>
                                    <TextBlock Text="{Binding Path}" Margin="4,0,0,0"/>
                                </StackPanel>
                                
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=ListIndex}" Value="0">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/tag_blue.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=ListIndex}" Value="1">
                                        <DataTrigger.Setters>
                                            <Setter Property="Source" Value="images/tag_red.png" TargetName="icon" />
                                        </DataTrigger.Setters>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                            
                        </TreeView.Resources>
                    </TreeView>
                    <TextBlock Grid.Row="1" Margin="4" Text="No duplicate files found." Foreground="LightSteelBlue" 
                            Visibility="{c:Binding ElementName=TreeViewMatchResult, Path=!HasItems}" 
                            IsHitTestVisible="False"/>
                </Grid>
            </TabItem>

            <TabItem Tag="{x:Static local:MainWindow+EnumInteractionStep.SearchErrors}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Height="auto" Width="auto" Source="images/report_error.png" />
                        <TextBlock Text="Search Errors" Margin="2,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                </TabItem.Header>
                <Grid x:Name="GridSearchErrors">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto" 
                                       MinHeight="{c:Binding ElementName=GridSearchErrors, Path=ActualHeight*0.3 }" 
                                       MaxHeight="{c:Binding ElementName=GridSearchErrors, Path=ActualHeight*0.6 }"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" FontWeight="Bold">Unaccessible Folders:</Label>
                    <Button Grid.Row="0" HorizontalAlignment="Right" Padding="4" Margin="2" Click="MenuButton_Click">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/disk.png"/>
                        </StackPanel>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Save folder list from Source Folder 1..." />
                                <MenuItem Header="Save folder list from Source Folder 2..." />
                                <MenuItem Header="Save folder list from Both Source Folders..." />
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>                    
                    <ListBox x:Name="ListBoxErrorFolderResult" Grid.Row="1" Margin="0,0,0,8" ItemsSource="{Binding UnaccessibleFolders}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image x:Name="icon" Height="auto" Width="auto" Source="images/folder.png"/>
                                    <TextBlock Text="{Binding}" Margin="4,0,0,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <TextBlock Grid.Row="1" Margin="4" Text="No unaccessibile folder found." Foreground="LightSteelBlue" 
                            Visibility="{c:Binding ElementName=ListBoxErrorFolderResult, Path=!HasItems}" 
                            IsHitTestVisible="False"/>

                    <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="4"/>
                    <Label Grid.Row="2" FontWeight="Bold">Unaccessible Files:</Label>
                    <Button Grid.Row="2" HorizontalAlignment="Right" Padding="4" Margin="2" Click="MenuButton_Click">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="images/disk.png"/>
                        </StackPanel>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Save file list of Source Folder 1..." />
                                <MenuItem Header="Save file list of Source Folder 2..." />
                                <MenuItem Header="Save file list of Both Source Folders..." />
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <ListBox x:Name="ListBoxErrorFileResult" Grid.Row="3" ItemsSource="{Binding UnaccessibleFiles}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Image x:Name="icon" Height="auto" Width="auto" Source="images/page.png"/>
                                    <TextBlock Text="{Binding}" Margin="4,0,0,0"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <TextBlock Grid.Row="3" Margin="4" Text="No unaccessibile files found." Foreground="LightSteelBlue" 
                            Visibility="{c:Binding ElementName=ListBoxErrorFileResult, Path=!HasItems}" 
                            IsHitTestVisible="False"/>
                </Grid>
            </TabItem>

            <TabItem Tag="{x:Static local:MainWindow+EnumInteractionStep.Actions}">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Height="auto" Width="auto" Source="images/wand.png" />
                        <TextBlock Text="Action" Margin="2,0,0,0" VerticalAlignment="Center" />
                    </StackPanel>
                </TabItem.Header>

                <StackPanel Orientation="Vertical">
                    <Label FontWeight="Bold">Step 3. Please select action(s) to be performed with the matched files:</Label>
                    <GroupBox Padding="2" Margin="0,4,0,0">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold" Text="Source Files" />
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical">
                            <RadioButton Margin="2" IsChecked="{Binding Path=ActionSourceFolder, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:EnumActionSourceFolder.One}}">
                                <StackPanel>
                                    <TextBlock Text="Matched files from source folder 1:" />
                                    <TextBlock FontWeight="Bold" Text="{Binding SourceFolder1}" />
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Margin="2" IsChecked="{Binding Path=ActionSourceFolder, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:EnumActionSourceFolder.Two}}">
                                <StackPanel>
                                    <TextBlock Text="Matched files from source folder 2:" />
                                    <TextBlock FontWeight="Bold" Text="{Binding SourceFolder2}" />
                                </StackPanel>
                            </RadioButton>
                            <RadioButton Margin="2" IsChecked="{Binding Path=ActionSourceFolder, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:EnumActionSourceFolder.Both}}">
                                <TextBlock Text="Matched files from Both source folders:">
                                    <Run Text="Matched files from"/>
                                    <Run Text="Both" FontWeight="Bold"/>
                                    <Run Text="source folders"/>
                                </TextBlock>
                            </RadioButton>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Padding="2" Margin="0,4,0,0">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold" Text="Action" />
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical">
                            <RadioButton x:Name="RadioButtonDeleteAction" Content="Delete files permanently" Margin="2"
                                         IsChecked="{Binding Path=ActionType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:EnumActionType.Delete}}"/>
                            <RadioButton x:Name="RadioButtonMoveToRecycleBinAction" Content="Move files to Recycle Bin" Margin="2"
                                         IsChecked="{Binding Path=ActionType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:EnumActionType.MoveToRecycleBin}}"/>
                            <RadioButton x:Name="RadioButtonCopyAction" Content="Copy files to a folder" Margin="2"
                                         IsChecked="{Binding Path=ActionType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:EnumActionType.Copy}}"/>
                            <RadioButton x:Name="RadioButtonMoveAction" Content="Move files to a folder" Margin="2"
                                         IsChecked="{Binding Path=ActionType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:EnumActionType.Move}}"/>
                            <CheckBox Margin="2,6,0,4" Content="Delete subfolders which are empty after Move/Delete"
                                      IsChecked="{Binding ShouldDeleteEmptySubfolders}"
                                      IsEnabled="{c:Binding ElementName=RadioButtonCopyAction, Path=!IsChecked}">
                            </CheckBox>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Padding="2" Margin="0,4,0,0"
                              IsEnabled="{c:Binding Path='ActionType == local:EnumActionType.Copy || ActionType == local:EnumActionType.Move'}">
                        <GroupBox.Header>
                            <TextBlock FontWeight="Bold" Text="Target Folder" />
                        </GroupBox.Header>
                        <StackPanel Orientation="Vertical">
                            <DockPanel Margin="4">
                                <Button DockPanel.Dock="Right" Content="Select Folder" Margin="4,0,0,0" Padding="4,1,4,1" Click="ButtonSelectTargetFolder_Click"/>
                                <Grid>
                                    <TextBox x:Name="TextBoxTargetFolder" Text="{Binding Path=TargetFolder, Mode=TwoWay}">
                                    </TextBox>
                                    <TextBlock Margin="5,2" Text="Enter or select folder..." Foreground="LightSteelBlue" 
                            Visibility="{c:Binding ElementName=TextBoxTargetFolder, Path=Text.IsEmpty}" 
                            IsHitTestVisible="False"/>
                                </Grid>
                            </DockPanel>
                            <CheckBox Margin="2,6,0,0" Content="Keep folder structure of source folder"
                                      IsChecked="{Binding ShouldKeepFolderStructure}"/>
                        </StackPanel>
                    </GroupBox>
                    <Button x:Name="ButtonPerformAction" MinWidth="60" Padding="8,4,8,4" Margin="4" HorizontalAlignment="Stretch" Click="ButtonPerformAction_Click">
                        <StackPanel Orientation="Horizontal">
                            <Image Height="auto" Width="auto" Source="images/wand.png" />
                            <TextBlock Text="Perform" Margin="4,0,0,0"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </TabItem>
        </TabControl>

        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="8,8,8,12" HorizontalAlignment="Right">
            <Button x:Name="ButtonBack" MinWidth="60" MinHeight="24" Click="ButtonBack_Click">
                <StackPanel Orientation="Horizontal">
                    <Image Height="auto" Width="auto" Source="images/arrow_left.png" />
                    <TextBlock Text="Back" Margin="4,0,0,0"/>
                </StackPanel>
            </Button>
            <Button x:Name="ButtonNext" Margin="4,0,0,0" MinWidth="60" MinHeight="24" Click="ButtonNext_Click">
                <StackPanel Orientation="Horizontal">
                    <Image Height="auto" Width="auto" Source="images/arrow_right.png" />
                    <TextBlock Text="Next" Margin="4,0,0,0"/>
                </StackPanel>            
            </Button>
        </StackPanel>

        <Popup x:Name="PopupErrorMessage" StaysOpen="false">
            <Border BorderThickness="1" BorderBrush="LightGray">
                <TextBlock x:Name="TextBlockErrorMessage" Background="LightYellow" Foreground="Red" Padding="4"/>
            </Border>
        </Popup>
    </Grid>
</Window>
